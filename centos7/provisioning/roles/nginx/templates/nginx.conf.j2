user  nginx;
worker_processes 1;

error_log  /var/log/nginx/error.log;
#error_log  /var/log/nginx/error.log  notice;
#error_log  /var/log/nginx/error.log  info;

pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server_tokens off;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    index   index.html index.htm;

    upstream unicorn {
        server unix:/data/project/tmp/sockets/unicorn.sock;
    }


    server {
        listen 80;
        server_name node1

        keepalive_timeout 5;

        # Location of our static files
        root data/project/public;

        location / {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_redirect off;

            # If you don't find the filename in the static files
            # Then request it from the unicorn server
            if (!-f $request_filename) {
                proxy_pass http://unicorn;
                break;
            }
        }

        error_page 500 502 503 504 /500.html;
        location = /500.html {
            root /data/project/public;
        }
    }
}