worker_processes 2
# ここはドキュメントルートではなく、config.ru がある場所
working_directory File.expand_path(File.dirname(__FILE__) + '/../../')
listen '/data/project/tmp/sockets/unicorn.sock'
stderr_path File.expand_path('log/unicorn-stderr.log', ENV['RAILS_ROOT'])
stdout_path File.expand_path('log/unicorn-stdout.log', ENV['RAILS_ROOT'])
pid '/data/project/tmp/pids/unicorn.pid'
preload_app true


before_exec do |server|
  ENV["BUNDLE_GEMFILE"] = "/data/project/Gemfile"
end

before_fork do |server, worker|
  # the following is highly recomended for Rails + "preload_app true"
  # as there's no need for the master process to hold a connection
  defined?(ActiveRecord::Base) and ActiveRecord::Base.connection.disconnect!

  # Before forking, kill the master process that belongs to the .oldbin PID.
  # This enables 0 downtime deploys.
  old_pid = "#{server.config[:pid]}.oldbin"
  if File.exists?(old_pid) && server.pid != old_pid
    begin
      Process.kill :QUIT, File.read(old_pid).to_i
    rescue Errno::ENOENT, Errno::ESRCH
      # someone else did our job for us
    end
  end
end

after_fork do |server, worker|
  # dalli
  if defined?(ActiveSupport::Cache::DalliStore) && Rails.cache.is_a?(ActiveSupport::Cache::DalliStore)
    Rails.cache.reset

    ObjectSpace.each_object(ActionDispatch::Session::DalliStore) { |obj| obj.reset }
  end
  # 什器キャッシュ削除
  Container::Builder.clear_tiled_cache!

end
